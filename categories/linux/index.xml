<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on blog vorona me</title><link>https://blog.vorona.me/categories/linux/</link><description>Recent content in Linux on blog vorona me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Nov 2016 19:40:58 +0000</lastBuildDate><atom:link href="https://blog.vorona.me/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>install MediaWiki and update with git pull</title><link>https://blog.vorona.me/2016/11/install-mediawiki-and-update-with-git-pull/</link><pubDate>Mon, 07 Nov 2016 19:40:58 +0000</pubDate><guid>https://blog.vorona.me/2016/11/install-mediawiki-and-update-with-git-pull/</guid><description>Install:
[code]
cd ~/public_html
git clone https://gerrit.wikimedia.org/r/mediawiki/core.git .
git clone https://gerrit.wikimedia.org/r/mediawiki/vendor.git
cd ~/public_html/skins/
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/CologneBlue
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/Modern
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/MonoBook￼￼
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/VectorV2
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/Vector
[/code]
Update:
[code]
for i in `find ~ -type d -name .git`; do cd `dirname $i` ; git pull ; done
[/code]
Example:
[code]
-sh-4.2$ find . -type d -name .git
./public_html/skins/CologneBlue/.git
./public_html/skins/Modern/.git
./public_html/skins/VectorV2/.git
./public_html/skins/Vector/.git
./public_html/skins/MonoBook/.git
./public_html/vendor/.git
./public_html/.git
[/code]
Upgrade DB:
[code]/opt/rh/rh-php72/root/usr/bin/php maintenance/update.</description></item><item><title>virtualmin: sieve</title><link>https://blog.vorona.me/2016/08/virtualmin-sieve/</link><pubDate>Thu, 25 Aug 2016 07:59:56 +0000</pubDate><guid>https://blog.vorona.me/2016/08/virtualmin-sieve/</guid><description>[bash]
yum install dovecot-pigeonhole -y
cp -a /etc/procmailrc{,.orig}
echo ‘
DELIVER=/usr/libexec/dovecot/deliver
LOGFILE=/var/log/procmail.log
TRAP=/etc/webmin/virtual-server/procmail-logger.pl
:0wi
VIRTUALMIN=|/etc/webmin/virtual-server/lookup-domain.pl $LOGNAME
EXITCODE=$?
:0
?/bin/test “$EXITCODE” = “73”
/dev/null
EXITCODE=0
:0 ?/bin/test “$VIRTUALMIN” != “”
{
INCLUDERC=/etc/webmin/virtual-server/procmail/$VIRTUALMIN
}
DEFAULT=$HOME/Maildir/
ORGMAIL=$HOME/Maildir/
DROPPRIVS=yes
:0w
| $DELIVER
:0
$DEFAULT
‘ &amp;gt; /etc/procmailrc sed -i “s|protocol lda {|protocol lda {\n mail_plugins = $mail_plugins sieve|” /etc/dovecot/conf.d/15-lda.conf
sed -i “s|^protocols =.*$|protocols = imap sieve|” /etc/dovecot/dovecot.conf
echo ‘
service managesieve-login {</description></item><item><title>virsh: port forwarding</title><link>https://blog.vorona.me/2016/07/virsh-port-forwarding/</link><pubDate>Tue, 26 Jul 2016 21:32:47 +0000</pubDate><guid>https://blog.vorona.me/2016/07/virsh-port-forwarding/</guid><description>Source:
https://www.redhat.com/archives/libvirt-users/2015-June/msg00033.html
https://www.libvirt.org/hooks.html
[bash]
mkdir /etc/libvirt/hooks
touch /etc/libvirt/hooks/qemu
chmod 700 /etc/libvirt/hooks/qemu
[/bash]
edit /etc/libvirt/hooks/qemu:
[bash]
#!/bin/bash
# used some from advanced script to have multiple ports: use an equal number of guest and host ports
# Update the following variables to fit your setup
Guest_name=node001
Guest_ipaddr=192.168.122.181
Host_ipaddr=&amp;lt;external_ip&amp;gt;
Host_port=( ‘63636’ ‘5555’ ‘5556’ ‘5557’ ‘5558’ ‘5559’ ‘5560’ )
Guest_port=( ‘63636’ ‘5555’ ‘5556’ ‘5557’ ‘5558’ ‘5559’ ‘5560’ )
length=$(( ${#Host_port[@]} – 1 ))</description></item><item><title>PHP: antivirus website check</title><link>https://blog.vorona.me/2016/07/php-antivirus-website-check/</link><pubDate>Thu, 21 Jul 2016 03:02:01 +0000</pubDate><guid>https://blog.vorona.me/2016/07/php-antivirus-website-check/</guid><description>Автоматизированное сканирование:
Базовая установка:
[bash]
yum install clamav -y
cd /root/install
rm -rf maldetect-*
wget http://www.rfxn.com/downloads/maldetect-current.tar.gz
tar xfz maldetect-current.tar.gz
cd maldetect-*
./install.sh
cd ~ &amp;amp;&amp;amp; rm -rf /root/install/maldetect-* &amp;amp;&amp;amp; rm -rf /etc/cron.daily/maldet
echo “.avi
.jpg
.flv
.png ” &amp;gt; /usr/local/maldetect/ignore_file_ext
[/bash]
Сканирование:
[bash]
freshclam ; maldet -u ; maldet -d ;
maldet –scan-all /home/
[/bash]
Ручная проверка на предмет подозрительных файлов:
Подозриельность определяеся наличием следующих комбинаций, которые находятся в одной строке файла:</description></item><item><title>F25.install</title><link>https://blog.vorona.me/2016/06/f24-install/</link><pubDate>Sat, 25 Jun 2016 08:12:29 +0000</pubDate><guid>https://blog.vorona.me/2016/06/f24-install/</guid><description>Updated for F25.
Repos:
[bash]
cat &amp;laquo; EOF &amp;gt; /etc/yum.repos.d/google-chrome.repo
[google-chrome]
name=google-chrome – $basearch
baseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub
EOF
dnf copr enable vorona/pidgin-xmpp-receipts
dnf install http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm -y
dnf install http://mirror.yandex.ru/fedora/russianfedora/russianfedora/free/fedora/russianfedora-free-release-stable.noarch.rpm -y
dnf install http://mirror.yandex.ru/fedora/russianfedora/russianfedora/nonfree/fedora/russianfedora-nonfree-release-stable.noarch.rpm -y
[/bash]
Pkgs:
[bash]
dnf install google-chrome-stable -y
dnf install pidgin-xmpp-receipts -y
dnf install purple-skypeweb viber -y
dnf install openssh-askpass vim htop atop mc screen keychain p7zip curl vim shutter sysfsutils pwgen \
pidgin dmidecode git mercurial python-xmpp python-beautifulsoup4 libnotify alsa-utils \</description></item><item><title>WP-monitoring</title><link>https://blog.vorona.me/2016/04/wp-monitoring/</link><pubDate>Fri, 29 Apr 2016 00:43:21 +0000</pubDate><guid>https://blog.vorona.me/2016/04/wp-monitoring/</guid><description>[bash]
git clone https://github.com/rsmmr/git-notifier
cd public_html
git init
echo ‘*.jpg
*.jpeg
*.gif
*.png
*.ico
*.css
*.zip
*.tgz
*.gz
*.rar
*.bz2
*.doc
*.xls
*.exe
*.pdf
*.ppt
*.txt
*.tar
*.mid
*.midi
*.wav
*.bmp
*.rtf
*.js
*.wmv
*.wma
*.mp3
*.mpg
*.avi
*.mpeg
*.mp4
*.divx
*.ttf
*.woff2
*.woff
*.swf
*.scss
*.svg
*.mo
*.po
*.pot
*.eot
*.xap
*.json
*.xml
*.md
*.non_progressive
.git-notifier.dat
.git-notifier.dat.bak
git-notifier.log
wp-content/cache/
‘ &amp;gt; .gitignore
git config hooks.mailinglist your@mail
ln -s $HOME/git-notifier/git-notifier .</description></item><item><title>How to disable keyring password storage for chrome</title><link>https://blog.vorona.me/2016/04/how-to-disable-keyring-password-storage-for-chrome/</link><pubDate>Fri, 29 Apr 2016 00:38:55 +0000</pubDate><guid>https://blog.vorona.me/2016/04/how-to-disable-keyring-password-storage-for-chrome/</guid><description>[bash]
new_desktop=/usr/share/applications/custom-google-chrome.desktop
cp -a /usr/share/applications/google-chrome.desktop $new_desktop
sed -i “s|google-chrome-stable|google-chrome-stable –password-store=basic –ssl-version-min=tls1.2|” $new_desktop
sed -i “s|Google Chrome|Custom Google Chrome|” $new_desktop
[/bash]</description></item><item><title>RTL8723BE – disable powersave</title><link>https://blog.vorona.me/2016/04/1st-new-post/</link><pubDate>Fri, 29 Apr 2016 00:38:28 +0000</pubDate><guid>https://blog.vorona.me/2016/04/1st-new-post/</guid><description>[bash]
ls /sys/class/net/wlan0/device/driver/module/drivers #pci:rtl8723be
systool -v -m rtl8723be
modinfo rtl8723be
echo ‘options rtl8723be ips=0’ &amp;raquo; /etc/modprobe.d/rtl8723be.conf
echo ‘options rtl8723be fwlps=0’ &amp;raquo; /etc/modprobe.d/rtl8723be.conf
rmmod rtl8723be &amp;amp;&amp;amp; modprobe rtl8723be
systool -v -m rtl8723be
[/bash]</description></item><item><title>Compress Images &amp;&amp; Progressive JPEGs</title><link>https://blog.vorona.me/?p=1/</link><pubDate>Thu, 28 Apr 2016 22:23:41 +0000</pubDate><guid>https://blog.vorona.me/?p=1/</guid><description>[bash]
yum install ImageMagick -y
for fn in `find /home/ -name “*.jpg”`; do
if [ ! -f $FILE ]; then
cp $fn $fn.non_progressive ;
convert -strip -interlace Plane -quality 75% $fn.non_progressive $fn ;
elif
convert -strip -interlace Plane -quality 75% $fn.non_progressive $fn ;
fi
done
find /home/ -name “*.non_progressive” -delete
[/bash]</description></item></channel></rss>